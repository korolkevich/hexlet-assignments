-- СОЗДАНИЕ ТАБЛИЦ

-- Указываем имя таблицы и перечисляем названия полей с указанием их типов данных

CREATE TABLE courses (
    name varchar(255),
    body text,
    created_at timestamp
);

-- Пример типов данных

-- Тип integer — целые числа
-- Тип varchar() — строка ограниченной переменной длинны
-- Тип text — строка неограниченной переменной длинны
-- Тип timestamp — время и дата


-- ВСТАВКА И МОДИФИКАЦИЯ ДАННЫХ


-- Добавление данных в таблицу

INSERT INTO courses (name, slug, lessons_count, body)
  VALUES ('basics of programming', 'basics', 10, 'this is theory');

-- В левой части этого запроса указывается название таблицы
-- В круглых скобках — список полей, которые нужно вставить
-- Справа от ключевого слова VALUES указываются значения полей в том же порядке


-- Обновление данных в таблице

UPDATE courses SET body = 'updated!', name = 'Bash' WHERE slug = 'bash';

-- В первой части запроса (SET) описывается какое значение установить в какое поле.
-- Во второй (после WHERE) указывается ограничение на то, к каким строкам применить обновление.

-- Удаление данных

DELETE FROM courses WHERE slug = 'bash';


-- ВЫБОРКА ДАННЫХ


-- Вывод всего содержимого таблицы users
SELECT * FROM users;

-- Вывод содержимого указанных полей
SELECT username, email FROM users;

-- Вывод имен и email всех пользователей, родившихся до 21 октября 2018
SELECT username, email FROM users WHERE birthday < '2018-10-21';

-- Пейджинг

-- Запрос выберет не более 3 записей
SELECT * FROM users LIMIT 3;

-- Сортировка

-- Вывод данных с сортировкой по дате рождения в прямом порядке
SELECT * FROM users ORDER BY birthday;

-- Вывод данных с сортировкой по дате рождения в обратном порядке
SELECT * FROM users ORDER BY birthday DESC;


-- ПЕРВИЧНЫЙ КЛЮЧ

-- Реляционная модель требует уникальности каждой записи.
-- Реализовать уникальность можно, добавив первичный ключевого
-- Первичный ключ — это поле или набор полей, которое содержит уникальное значение для каждой записи.
-- Первичный ключ не может меняться, его значение однозначно определяет любую запись в таблице.


-- Первичный ключ принято создавать первым полем с названием id.
-- Для первичного ключа обязательно указывать PRIMARY KEY в описании таблицы

CREATE TABLE products (
    id bigint PRIMARY KEY,
    first_name varchar(255),
);


-- Автогенерируемый первичный ключ

CREATE TABLE colors (
  id bigint PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name varchar(255)
);

-- При вставке данных значение такого первичного ключа указывать не нужно
INSERT INTO colors (name) VALUES ('Red'), ('Blue');
